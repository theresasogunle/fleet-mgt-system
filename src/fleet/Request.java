/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fleet;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Theresa
 */
public class Request extends javax.swing.JInternalFrame {

    /**
     * Creates new form Request
     */
    public Request() {
        initComponents();
           try
{
   // UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
       UIManager.put("nimbusBase", new Color(119,199,240));
      UIManager.put("nimbusBlueGrey",new Color(119,199,240));
     UIManager.put("control",Color.WHITE);
       UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
}
 catch(Exception e) {}
        
         DefaultTableModel m = (DefaultTableModel) tab.getModel();
        String query = "select vname,rname,phone from request";
        String[] cols = {"vname","rname","phone"};
        ArrayList<ArrayList<String>> request=new Connection().getAllMultipleColumnData(query, cols);


        if(request.size()>0)
        {
            for(int i=0; i <request.get(0).size(); i++)
            {
                // Integer id=Integer.parseInt(request.get(0).get(i));
                 String vname = request.get(0).get(i);
                 String rname = request.get(1).get(i);
                 String phone=  request.get(2).get(i);
                
                

                     m.addRow(new Object[]{i+1,vname,rname,phone});

            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        approveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("REQUESTS");

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "VEHICLE'S NAME", "REQUESTER'S NAME", "REQUESTER'S PHONE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab);
        if (tab.getColumnModel().getColumnCount() > 0) {
            tab.getColumnModel().getColumn(1).setPreferredWidth(150);
            tab.getColumnModel().getColumn(2).setPreferredWidth(150);
            tab.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        approveButton.setText("APPROVE REQUEST");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });

        closeButton.setText("CLOSE REQUEST");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(approveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166)
                        .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveButton)
                    .addComponent(closeButton))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
        // TODO add your handling code here:
           DefaultTableModel m = (DefaultTableModel)tab.getModel();
          int row = tab.getSelectedRow();
          String phone= m.getValueAt(row, 3).toString();
          
          {
           boolean inserted = new Connection().executeCommand("insert", "insert into arequest(phone)"
                   + " values('"+phone+"')");

            if(inserted)
             {
                 JOptionPane.showMessageDialog(this, "Request approved!", "Success", JOptionPane.INFORMATION_MESSAGE);
                 
             }
             else
                  JOptionPane.showMessageDialog(this, "Request not approved!", "Error", JOptionPane.ERROR_MESSAGE);
           }
          
          
          
          
      
         
           
    }//GEN-LAST:event_approveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
          DefaultTableModel m = (DefaultTableModel)tab.getModel();
          int row = tab.getSelectedRow();
          String requester="";
          String vehicle="";
          boolean flag=false;
           try{
          requester= m.getValueAt(row, 2).toString();
           vehicle= m.getValueAt(row, 1).toString();
          
          int resp= JOptionPane.showConfirmDialog(this,"Are you sure you want to delete Requester "+requester, "Confirm Delete", JOptionPane.YES_NO_OPTION);
         if(resp==0)
          flag = true;

          }catch(Exception ex){}

          if(flag)
          {
               String query = "";
               String query1="";
                    if(requester.isEmpty())
                        JOptionPane.showMessageDialog(this,"Requester not retreived!","Error",JOptionPane.ERROR_MESSAGE);
                    else
                    {
                       
                        {
                           query1 = "delete from vehicles where name='"+vehicle+"'"; 
                          query = "delete from request where rname='"+requester+"'";

                            boolean deleted = new Connection().executeCommand("delete", query);
                            boolean  deleted1 = new Connection().executeCommand("delete", query1);
                               
                            if(deleted)
                            { m.removeRow(row);
                                JOptionPane.showMessageDialog(this, "Request closed!", "Success", JOptionPane.INFORMATION_MESSAGE);
                            }
                            else
                                 JOptionPane.showMessageDialog(this, "Request not closed!", "Error", JOptionPane.ERROR_MESSAGE);

                        }
                    }
          }

                    
    }//GEN-LAST:event_closeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
