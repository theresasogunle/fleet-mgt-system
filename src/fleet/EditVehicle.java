/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fleet;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Theresa
 */
public class EditVehicle extends javax.swing.JInternalFrame {

    /**
     * Creates new form EditVehicle
     */
    public EditVehicle() {
        initComponents();
       
           try
{
   // UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
       UIManager.put("nimbusBase", new Color(119,199,240));
      UIManager.put("nimbusBlueGrey",new Color(119,199,240));
    // UIManager.put("control",Color.WHITE);
       UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
}
 catch(Exception e) {}
        
         DefaultTableModel m = (DefaultTableModel) tab.getModel();
        String query = "select name,color,engine_number from vehicles";
        String[] cols = {"name","color","engine_number"};
        ArrayList<ArrayList<String>> vehicles=new Connection().getAllMultipleColumnData(query, cols);


        if(vehicles.size()>0)
        {
            for(int i=0; i <vehicles.get(0).size(); i++)
            {
              
                 String name = vehicles.get(0).get(i);
                 String color = vehicles.get(1).get(i);
                 String engine_number=  vehicles.get(2).get(i);
                
                

                     m.addRow(new Object[]{i+1,name,color,engine_number});

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("ALL VEHICLES DETAILS");

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/N", "Name of vehicle", "Color ", "Engine number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab);
        if (tab.getColumnModel().getColumnCount() > 0) {
            tab.getColumnModel().getColumn(0).setResizable(false);
            tab.getColumnModel().getColumn(1).setResizable(false);
            tab.getColumnModel().getColumn(2).setResizable(false);
            tab.getColumnModel().getColumn(3).setResizable(false);
        }

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteButton)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
         DefaultTableModel m = (DefaultTableModel)tab.getModel();
          int row = tab.getSelectedRow();
          String name="";
          boolean flag=false;
           try{
          name= m.getValueAt(row, 1).toString();
          int resp= JOptionPane.showConfirmDialog(this,"Are you sure you want to delete Vehicle "+name, "Confirm Delete", JOptionPane.YES_NO_OPTION);
         if(resp==0)
          flag = true;

          }catch(Exception ex){}

          if(flag)
          {
               String query = "";
                    if(name.isEmpty())
                        JOptionPane.showMessageDialog(this,"Requester not retreived!","Error",JOptionPane.ERROR_MESSAGE);
                    else
                    {
                       
                        {
                          query = "delete from vehicles where name='"+name+"'";

                            boolean deleted = new Connection().executeCommand("delete", query);
                               
                            if(deleted)
                            { m.removeRow(row);
                                JOptionPane.showMessageDialog(this, "vehicle Deleted!", "Success", JOptionPane.INFORMATION_MESSAGE);
                            }
                            else
                                 JOptionPane.showMessageDialog(this, "Vehicle not deleted!", "Error", JOptionPane.ERROR_MESSAGE);

                        }
                    }
          }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
